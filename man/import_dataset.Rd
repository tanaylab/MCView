% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import.R
\name{import_dataset}
\alias{import_dataset}
\title{Import a dataset to an MCView project}
\usage{
import_dataset(
  project,
  dataset,
  anndata_file,
  cell_type_field = NULL,
  metacell_types_file = NULL,
  cell_type_colors_file = NULL,
  metadata_fields = NULL,
  metadata = NULL,
  metadata_colors = NULL,
  gene_modules_file = NULL,
  gene_modules_k = NULL,
  calc_gg_cor = TRUE,
  gene_names = NULL,
  atlas_project = NULL,
  atlas_dataset = NULL,
  projection_weights_file = NULL,
  copy_atlas = TRUE,
  ...
)
}
\arguments{
\item{project}{path to the project}

\item{dataset}{name for the dataset, e.g. "PBMC"}

\item{anndata_file}{path to \code{h5ad} file which contains the output of metacell2 pipeline (metacells python package).}

\item{cell_type_field}{name of a field in the anndata \code{object$obs} which contains a cell type (optional).
If the field doesn't exist and \code{metacell_types_file} is missing, MCView would first look
for a field named 'projected_type', 'type', 'cell_type' or 'cluster' at \code{object$obs} (in this order), and if it doesn't exists MCView would cluster the metacell matrix using kmeans++ algorithm (from the \code{tglkmeans} package).}

\item{metacell_types_file}{path to a tabular file (csv,tsv) with cell type assignement for
each metacell. The file should have a column named "metacell" with the metacell ids and another
column named "cell_type", or "cluster" with the cell type assignment. Metacell ids that do
not exists in the data would be ignored.
If this parameter and \code{cell_type_field} are missing, MCView would cluster the
metacell matrix using kmeans++ algorithm (from the \code{tglkmeans} package).
If the file has a field named 'color' and \code{cell_type_colors_file=NULL}, the cell types colors would
be used.}

\item{cell_type_colors_file}{path to a tabular file (csv,tsv) with color assignement for
each cell type. The file should have a column named "cell_type" or "cluster" with the
cell types and another column named "color" with the color assignment. Cell types that do not
exist in the metacell types would be ignored.
If this is missing, and \code{metacell_types_file} did not have a 'color' field, MCView would use the \code{chameleon} package to assign a color for each cell type.
When an atlas is given (using \code{atlas_project} and \code{atlas_dataset}), if the cell types
are the same as the atlas, the atlas colors would be used.}

\item{metadata_fields}{names of fields in the anndata \code{object$obs} which contains metadata for each metacell.
The fields should can be either numeric or categorical, but currently
categorical annotations are only supported at the 'Cell type' tabs.
 You can use \code{cell_metadata_to_metacell} with \code{categorical=TRUE} to convert from categorical to a numeric score (e.g. by using fraction of the category). You can use 'all' in order to import all the fields
 of the anndata object.}

\item{metadata}{can be either a data frame with a column named "metacell" with the metacell id and other metadata columns
or a name of a delimited file which contains such data frame. See \code{metadata_fields} for other details.}

\item{metadata_colors}{a named list with colors for each metadata column, or a name of a yaml file with such list.
For numerical metadata columns, colors should be given as a list where the first element is a vector of colors and the second element is a vector of breaks.
If only colors are given breaks would be implicitly determined from the minimum and maximum of the metadata field.
For categorical metadata columns, color can be given either as a named vector where names are the categories and the values are the colors, or as a named list where the first element named 'colors' holds the colors, and the second element
called 'categories' holds the categories.}

\item{gene_modules_file}{path to a tabular file (csv,tsv) with assignment of genes to gene modules. Should have a field named "gene" with the gene name and a field named "module" with the name of the gene module.}

\item{gene_modules_k}{number of clusters for initial gene module calculation. If NULL - the number of clusters would be determined such that an gene module would contain 16 genes on average.}

\item{calc_gg_cor}{Calculate top 30 correlated and anti-correlated genes for each gene. This computation can be heavy for large datasets or weaker machines, so you can set \code{calc_gg_cor=FALSE} to skip it. Note that then this feature would be missing from the app.}

\item{gene_names}{use alternative gene names (optional). A data frame with a column called 'gene_name' with the original gene name (as it appears at the 'h5ad' file) and another column called 'alt_name' with the gene name to use in MCView. Genes that do not appear at the table would not be changed.}

\item{atlas_project}{path to and \code{MCView} project which contains the atlas.}

\item{atlas_dataset}{name of the atlas dataset}

\item{projection_weights_file}{Path to a tabular file (csv,tsv) with the following fields "query", "atlas" and "weight". The file is an output of \code{metacells} projection algorithm.}

\item{copy_atlas}{copy atlas MCView to the current project. If FALSE - a symbolic link would be created instaed.}

\item{...}{
  Arguments passed on to \code{\link[=create_project]{create_project}}
  \describe{
    \item{\code{title}}{The title of the app. This would be shown on the top left of the screen.}
    \item{\code{tabs}}{Controls which tabs to show in the left sidebar and their order. Options are: "Manifold", "Genes", "Query", "Atlas", "Markers", "Gene modules", "Projected-fold", "Diff. Expression", "Cell types", "Flow", "Annotate", "About". When NULL - default tabs would be set. For projects with atlas projections, please set \code{atlas} to TRUE.}
    \item{\code{help}}{Controls wether to start the app with a help modal (from introjs). Help messages can be edited in help.yaml file (see 'Architecture' vignette).}
    \item{\code{selected_gene1}}{The default genes that would be selected (in any screen with gene selection). If this parameter is missing, the 2 genes with highest max(expr)-min(expr) in the first dataset would be chosen.}
    \item{\code{selected_gene2}}{The default genes that would be selected (in any screen with gene selection). If this parameter is missing, the 2 genes with highest max(expr)-min(expr) in the first dataset would be chosen.}
    \item{\code{selected_mc1}}{The default metacells that would be selected in the Diff. Expression tab.}
    \item{\code{selected_mc2}}{The default metacells that would be selected in the Diff. Expression tab.}
    \item{\code{datasets}}{A named list with additional per-dataset parameters. Current parameters include default visualization properties of projection and scatter plots.}
    \item{\code{other_params}}{Named list of additional parameters such as projection_point_size, projection_point_stroke, scatters_point_size and scatters_stroke_size}
    \item{\code{edit_config}}{open file editor for config file editing}
    \item{\code{atlas}}{use default configuration for atlas projections (relevant only when \code{tabs} is NULL)}
  }}
}
\value{
invisibly returns an \code{AnnDataR6} object of the read \code{anndata_file}
}
\description{
Read an \code{anndata} file which is the output of python \code{metacells} package,
and import the metacell dataset to MCView. Each project can have multiple datasets
which can be in the app using the right sidebar.
}
\details{
The function would create a directory under \code{project/cache/dataset} which
would contain objects used by MCView shiny app (such as the metacell matrix).

In addition, you can supply file with type assignment for each metacell
(\code{metacell_types_file}) and a file with color assignment for each metacell type
(\code{cell_type_colors_file}).
}
\examples{
\dontrun{
dir.create("raw")
download.file(
    "http://www.wisdom.weizmann.ac.il/~atanay/metac_data/PBMC_processed.tar.gz",
    "raw/PBMC_processed.tar.gz"
)
untar("raw/PBMC_processed.tar.gz", exdir = "raw")
create_project("PBMC")
import_dataset("PBMC", "PBMC163k", "raw/metacells.h5ad")
}

}
