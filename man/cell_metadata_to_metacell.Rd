% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metadata.R
\name{cell_metadata_to_metacell}
\alias{cell_metadata_to_metacell}
\alias{cell_metadata_to_metacell_from_metacell1}
\alias{cell_metadata_to_metacell_from_h5ad}
\title{Convert cell metadata to metacell metadata}
\usage{
cell_metadata_to_metacell(
  cell_metadata,
  cell_to_metacell,
  func = mean,
  categorical = c()
)

cell_metadata_to_metacell_from_metacell1(
  scdb,
  matrix,
  mc,
  metadata_fields,
  func = mean,
  categorical = c()
)

cell_metadata_to_metacell_from_h5ad(
  anndata_file,
  metadata_fields,
  func = mean,
  categorical = c(),
  rm_outliers = TRUE
)
}
\arguments{
\item{cell_metadata}{data frame with a column named "cell_id" with
the cell id and other metadata columns, or a name of a delimited file which
contains such data frame.}

\item{cell_to_metacell}{data frame with a column named "cell_id" with cell id and
another column named "metacell" with the metacell the cell is part of, or a
name of a delimited file which contains such data frame.}

\item{func}{summary function for the cell metadata for non categorical metadata columns
(e.g. mean, median, sum)}

\item{categorical}{a vector with names of categorical variables. The returned data frame would have
a column for each category where the values are the fraction of cells with the
category in each metacell.}

\item{scdb, matrix, mc}{scdb, matrix and mc objects from metacell1. See \code{import_dataset_metacell1} for more information.}

\item{metadata_fields}{names of fields in the anndata \code{object$obs} which contains metadata for each cell.}

\item{anndata_file}{path to \code{h5ad} file which contains the output of metacell2 pipeline (metacells python package).}

\item{rm_outliers}{do not calculate statistics for cells that are marked as outliers (\code{outiler=TRUE} in \code{object$obs}) (only relevant when running \code{cell_metadata_to_metacell_from_h5ad})}
}
\value{
A data frame with a column named "metacell" and
the metadata columns from \code{cell_metadata} summarized for each metacell using
\code{func} for non-categorical variables, and a column for each category of the categorical metadata variables
in\code{cell_metadata}, where the values are the fraction of cells with the category in each metacell.
}
\description{
Summarise cell metadata for each metacell. Metadata fields can be either numeric and then the summary function \code{func} is applied for the values of each field, or categorical metadata fields which are expanded to multiple
metadata columns with the fraction of cells (in each metacell) for every category. Variables that are either character,
factor or are explicitly set at \code{categorical} are treated as categorical.


\code{cell_metadata_to_metacell} converts cell metadata to metacell metadata from data frames. \cr
\code{cell_metadata_to_metacell_from_h5ad} extracts metadata fields and cell_to_metacell from cells h5ad file and
then runs \code{cell_metadata_to_metacell}. \cr
\code{cell_metadata_to_metacell_from_metacell1} extracts metadata fields and cell_to_metacell from metacell1 scdb and
then runs \code{cell_metadata_to_metacell}.
}
\section{Functions}{
\itemize{
\item \code{cell_metadata_to_metacell_from_metacell1()}: 

\item \code{cell_metadata_to_metacell_from_h5ad()}: 

}}
\examples{
set.seed(60427)
n_cells <- 5e6
cell_metadata <- tibble::tibble(
    cell_id = 1:n_cells,
    md1 = sample(1:5, size = n_cells, replace = TRUE),
    md2 = rnorm(n = n_cells),
    md_categorical1 = sample(paste0("batch", 1:5), size = n_cells, replace = TRUE),
    md_categorical2 = sample(1:5, size = n_cells, replace = TRUE)
)

cell_to_metacell <- tibble::tibble(
    cell_id = 1:n_cells,
    metacell = sample(0:1535, size = n_cells, replace = TRUE)
)
metadata <- cell_metadata_to_metacell(
    cell_metadata[, 1:3],
    cell_to_metacell
)
head(metadata)

metadata1 <- cell_metadata_to_metacell(
    cell_metadata[, 11:3], cell_to_metacell,
    func = function(x) x * 2
)
head(metadata1)


metadata3 <- cell_metadata_to_metacell(
    cell_metadata,
    cell_to_metacell,
    categorical = c("md_categorical1", "md_categorical2")
)

head(metadata3)
\dontrun{
cell_metadata_to_metacell_from_h5ad("cells.h5ad", c("pile", "age", "batch"), categorical = "batch")
}

}
