% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cell_types.R, R/import.R
\name{update_cell_type_colors}
\alias{update_cell_type_colors}
\title{Update color assignment for each cell type}
\usage{
update_cell_type_colors(project, dataset, cell_type_colors_file)

update_cell_type_colors(project, dataset, cell_type_colors_file)
}
\arguments{
\item{project}{path to the project directory}

\item{dataset}{name for the dataset, e.g. "PBMC"}

\item{cell_type_colors_file}{path to a tabular file (csv,tsv) with color assignment for
each cell type. The file should have a column named "cell_type" or "cluster" with the
cell types and another column named "color" with the color assignment. Cell types that do not
exist in the metacell types would be ignored, so if you changed the names of cell types you would have to also
update the metacell types (using \code{update_metacell_types})
If this parameter is missing, MCView would use the \code{chameleon} package to assign a color for each cell type.}
}
\description{
Change the color assignments for each cell type to the ones listed at \code{cell_type_colors_file}.

Change the color assignments for each cell type to the ones listed at \code{cell_type_colors_file}.
}
\details{
This is usually done after a first iteration of annotation using the "Annotate" tab in the MCView annotation, which can
export a valid \code{cell_type_colors_file}.

The file should have a column named "cell_type" or "cluster" with the cell types and another column named "color" with the color assignment.
Note that the exported file from the __MCView__ app contains additional fields which will be
ignored in this function.

Under the hood - MCView updates a file named "cell_type_colors.tsv" under \code{project/cache/dataset}, which can also be edited manually.

This is usually done after a first iteration of annotation using the
"Annotate" tab in the MCView annotation, which can
export a valid \code{cell_type_colors_file}.

The file should have a column named "cell_type" or "cluster" with
the cell types and another column named "color" with the color assignment.
Note that the exported file from the __MCView__ app contains additional fields which will be
ignored in this function.

Under the hood - MCView updates a file named "cell_type_colors.tsv" under
\code{project/cache/dataset}, which can also be edited manually.
}
\examples{
\dontrun{
update_metacell_types("PBMC", "PBMC163k", "raw/cluster-colors.csv")
}

\dontrun{
update_metacell_types("PBMC", "PBMC163k", "raw/cluster-colors.csv")
}

}
