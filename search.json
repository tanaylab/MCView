[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Weizmann Institute Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/Architecture.html","id":"projects","dir":"Articles","previous_headings":"","what":"Projects","title":"Architecture","text":"project standard library structure binds config cache, e.g.: example shows directory structure project named my_project contains two metacell datasets - wt ko. Multiple functions MCView package accept project path expect find configuration files cache standard relative path. Creation project can done running: open text editor order edit configuration file.","code":"my_project ├── config │   ├── about.Rmd │   ├── config.yaml │   └── help.yaml └── cache     ├── ko     └── wt MCView::create_project(\"my_project\")"},{"path":"/articles/Architecture.html","id":"configuration-files","dir":"Articles","previous_headings":"","what":"Configuration files","title":"Architecture","text":"MCView project can 3 configuration files: config.yaml - main configuration file (required) help.yaml - help text messages (optional) .Rmd - text tab (optional) main configuration file (config/config.yaml) contains parameters:","code":"title: MCView tabs: [\"QC\", \"Manifold\", \"Genes\", \"Markers\", \"Gene modules\", \"Diff. Expression\", \"Cell types\", \"Annotate\", \"About\"] # which tabs to show help: false # set to true to show introjs help on start selected_gene1: Foxc1 # Default selected gene1 (optional) selected_gene2: Twist1 # Default selected gene2 (optional) selected_mc1: 1 # Default selected metacell1  selected_mc2: 2 # Default selected metacell2 datasets: # optional parameters per dataset   PBMC163k:     min_d: 0.3 # default minimal edge distance to show in projection plots     # projection_point_size: 1 # Default size for projection points     # projection_stroke: 0.1 # Default line stroke for projection points     # scatters_point_size: 2 # Default size for scatter plot (such as gene gene plots)     # scatters_stroke_size: 0.1 # Default line stroke for scatter plot (such as gene gene plots)"},{"path":"/articles/Architecture.html","id":"title","dir":"Articles","previous_headings":"Configuration files","what":"title","title":"Architecture","text":"title app. shown top left screen.","code":""},{"path":"/articles/Architecture.html","id":"tabs","dir":"Articles","previous_headings":"Configuration files","what":"tabs","title":"Architecture","text":"Controls tabs show left sidebar order. Options : want add remove tabs? Many times want separate ‘development’ version MCView app allows users re-annotate data ‘production’ version contains data analysis tabs. can done removing “Annotate” tabs field. addition, might want always start app “Genes” tab instead “Manifold”, can done changing order tabs field. lastly, tabs “Query”, “Atlas” “Flow” enabled default added explicitly tabs section config file.","code":"[\"QC\", \"Manifold\", \"Genes\", \"Query\", \"Atlas\", \"Markers\", \"Gene modules\", \"Projected-fold\", \"Diff. Expression\", \"Cell types\", \"Flow\", \"Annotate\", \"About\"]"},{"path":"/articles/Architecture.html","id":"help","dir":"Articles","previous_headings":"Configuration files","what":"help","title":"Architecture","text":"Controls wether start app help modal (introjs). Help messages can edited help.yaml file (see ).","code":""},{"path":"/articles/Architecture.html","id":"selected_gene1selected_gene2-optional","dir":"Articles","previous_headings":"Configuration files","what":"selected_gene1/selected_gene2 (optional)","title":"Architecture","text":"default genes selected (screen gene selection). parameter missing, 2 genes highest max(expr)-min(expr) first dataset chosen.","code":""},{"path":"/articles/Architecture.html","id":"selected_mc1selected_mc2","dir":"Articles","previous_headings":"Configuration files","what":"selected_mc1/selected_mc2","title":"Architecture","text":"default metacells selected Diff. Expression tab.","code":""},{"path":"/articles/Architecture.html","id":"datasets-optional","dir":"Articles","previous_headings":"Configuration files","what":"datasets (optional)","title":"Architecture","text":"Additional per-dataset parameters. Current parameters include default visualization properties projection scatter plots.","code":""},{"path":"/articles/Architecture.html","id":"help-yaml","dir":"Articles","previous_headings":"Configuration files","what":"help.yaml","title":"Architecture","text":"file contains help messages used introjs. shouldn’t changed general, except maybe introduction message. Note messages refer shiny elements, look code order identify element message.","code":""},{"path":"/articles/Architecture.html","id":"about-rmd","dir":"Articles","previous_headings":"Configuration files","what":"about.Rmd","title":"Architecture","text":"Rmarkdown file contains contents page. Edit wish, remember can remove “” tab altogether using tabs parameter config.yaml.","code":""},{"path":"/articles/Architecture.html","id":"cached-data","dir":"Articles","previous_headings":"","what":"Cached data","title":"Architecture","text":"order run, MCView needs pre-process metacell matrix cluster annotations. can done MCView::import_dataset function accepts project path, dataset name path h5ad file generated metacell1. cached files saved cache section project folder, separate folder dataset. example: can list datasets project using: removal dataset can done :","code":"└── cache     ├── ko     └── wt MCView::dataset_ls(\"my_project\") MCView::dataset_rm(\"my_project\", \"dataset\")"},{"path":"/articles/Architecture.html","id":"running-the-app","dir":"Articles","previous_headings":"","what":"Running the app","title":"Architecture","text":"Running app can done running:","code":"MCView::run_app(project = \"/path/to/my/project\")"},{"path":"/articles/Architecture.html","id":"deployment","dir":"Articles","previous_headings":"","what":"Deployment","title":"Architecture","text":"MCView can generate ‘deployment ready’ version app running: create minimal shiny app “/path///bundle/my_project” directory contain: app.R file. project config cache. Note: bundle use use installed version MCView server. want create ‘self-contained’ bundle include MCView code well, set self_contained=TRUE. bundle can deployed shiny-server running: environment supports serving shiny apps. Note deploying services make sure MCView package installed.","code":"MCView::create_bundle(project = \"/path/to/my/project\", path = \"/path/to/the/bundle\", name = \"my_project\") rsconnect::deployApp(appDir = \"/path/to/the/bundle/my_project\")"},{"path":"/articles/Docker.html","id":"pull-the-image","dir":"Articles","previous_headings":"","what":"Pull the image","title":"Docker","text":"Pull MCView docker image using:","code":"docker pull tanaylab/mcview:latest"},{"path":"/articles/Docker.html","id":"create-a-project","dir":"Articles","previous_headings":"","what":"Create a project","title":"Docker","text":"","code":"mkdir PBMC docker run -v $(pwd)/PBMC:/project tanaylab/mcview R -e 'MCView::create_project(\"/project/PBMC\")'"},{"path":"/articles/Docker.html","id":"import-a-dataset","dir":"Articles","previous_headings":"","what":"Import a dataset","title":"Docker","text":"Download PBMC example dataset: Import dataset:","code":"wget http://www.wisdom.weizmann.ac.il/~atanay/metac_data/PBMC_processed.tar.gz tar xvzf PBMC_processed.tar.gz docker run -v $(pwd):/workdir tanaylab/mcview R -e 'MCView::import_dataset(\"/workdir/PBMC\", dataset = \"PBMC163k\", anndata_file = \"/workdir/metacells.h5ad\", cell_type_colors_file = \"/workdir/cluster-colors.csv\")'"},{"path":"/articles/Docker.html","id":"run-the-app","dir":"Articles","previous_headings":"","what":"Run the app","title":"Docker","text":"can now go port 3838 machine view running app.","code":"docker run -v $(pwd)/PBMC:/project -p 3838:3838 tanaylab/mcview"},{"path":"/articles/MCView.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Getting started with MCView","text":"start downloading PBMC dataset pre-processed using metacells python package. commands end result two files named “raw/pbmc_metacells.h5ad” “raw/cluster-colors.csv” import MCView next steps.","code":"library(MCView) dir.create(\"raw\") download.file(\"http://www.wisdom.weizmann.ac.il/~atanay/metac_data/PBMC_processed.tar.gz\", \"raw/PBMC_processed.tar.gz\") untar(\"raw/PBMC_processed.tar.gz\", exdir = \"raw\")"},{"path":"/articles/MCView.html","id":"create-a-project","dir":"Articles","previous_headings":"","what":"Create a project","title":"Getting started with MCView","text":"first step running MCView generating project directory structure: text editor opened PBMC/config/config.yaml file: configuration file generated using create_project parameters, can edit want, add parameters per dataset, see architecture vignette full description config parameters.","code":"create_project(\"PBMC\", title = \"PBMC\") title: PBMC tabs: [\"QC\", \"Manifold\", \"Genes\", \"Markers\", \"Gene modules\", \"Diff. Expression\", \"Cell types\",\"Annotate\", \"About\"] # which tabs to show help: false # set to true to show introjs help on start # selected_gene1: Foxc1 # Default selected gene1 # selected_gene2: Twist1 # Default selected gene2 selected_mc1: 1 # Default selected metacell1  selected_mc2: 2 # Default selected metacell2"},{"path":"/articles/MCView.html","id":"import","dir":"Articles","previous_headings":"","what":"Import","title":"Getting started with MCView","text":"Next, import PBMC dataset project created. project can contain multiple dataset, switching can done right sidebar. pre-process metacell dataset order view shiny app: important field anndata field points h5ad file downloaded. can see also specified field h5ad object pre-computed cluster assignments per metacell ‘type’ field. Note import part might take minutes, depending (mostly) number metacells. see takes long - set calc_gg_cor FALSE order skip calculating correlation genes. save significant amount import time make feature unavailable app. addition, features available ran compute_for_mcview metacells python package, try remember running importing MCView. MCView supports also importing datasets old R metacell package, see import_dataset_metacell1 details.","code":"import_dataset(     project = \"PBMC\",     dataset = \"PBMC\",     anndata_file = \"raw/metacells.h5ad\",     cell_type_field = \"type\" )"},{"path":"/articles/MCView.html","id":"run-the-app","dir":"Articles","previous_headings":"","what":"Run the app","title":"Getting started with MCView","text":"browser window opened app. can also specify port host, launch browser window, e.g.:","code":"run_app(project = \"PBMC\", launch.browser = TRUE) run_app(project = \"PBMC\", port = 5555, host = \"127.0.0.1\", launch.browser = FALSE)"},{"path":"/articles/MCView.html","id":"update-annotations","dir":"Articles","previous_headings":"","what":"Update annotations","title":"Getting started with MCView","text":"working bit initial metacell model, usually want update default dataset annotations ones created using MCView. can done : Pressing “export” button upper left “Annotate” screen saving file. Running: “/path//metacell_types_file” path exported file. can now rerun app types/colors updated. want update cell type colors can run:","code":"update_metacell_types(\"PBMC\", \"PBMC163k\", \"/path/to/metacell_types_file\") update_cell_type_colors(\"PBMC\", \"PBMC163k\", \"/path/to/cell_type_colors_file\")"},{"path":"/articles/MCView.html","id":"metadata","dir":"Articles","previous_headings":"","what":"Metadata","title":"Getting started with MCView","text":"can load metadata fields metacell using metadata parameter import_dataset command: format data frame (delimited filename) column named metacell annotation fields. metadata fields can either numeric categorical. can use metadata_colors parameter set breaks colors numerical metadata field, color category categorical fields. want change metadata fields colors import, can use update_metadata update_metadata_colors functions: can generate metadata per metacell cell metadata using cell_metadata_to_metacell cell_metadata_to_metacell_from_h5ad functions.","code":"import_dataset(     project = \"PBMC\",     dataset = \"PBMC\",     anndata_file = \"raw/metacells.h5ad\",     metadata = \"raw/metadata.csv\" ) update_metadata(     project = \"PBMC\",     dataset = \"PBMC163k\",     metadata = \"new_metadata.csv\" ) update_metadata_colors(     project = \"PBMC\",     dataset = \"PBMC163k\",     metadata_colors = new_metadata_colors )"},{"path":"/articles/MCView.html","id":"deploy","dir":"Articles","previous_headings":"","what":"Deploy","title":"Getting started with MCView","text":"Create deployment ready bundle running: can upload bundle shinyapps.io running: shiny-server hosting service uploading “PBMC_bundle” directory service. Note might need set hosting service allow higher memory default - MCView keeps metacell matrix -memory therefore needs around 1GB RAM small datasets PBMC, 2-4GB large datasets MOCA.","code":"create_bundle(project = \"PBMC\", path = getwd(), name = \"PBMC_bundle\") rsconnect::deployApp(appDir = file.path(getwd(), \"PBMC_bundle\"))"},{"path":"/articles/MCView.html","id":"docker","dir":"Articles","previous_headings":"","what":"Docker","title":"Getting started with MCView","text":"See docker vignette instructions using docker image.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviezer Lifshitz. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lifshitz (2023). MCView: Shiny App Metacell Analysis. https://tanaylab.github.io/MCView, https://github.com/tanaylab/MCView.","code":"@Manual{,   title = {MCView: A Shiny App for Metacell Analysis},   author = {Aviezer Lifshitz},   year = {2023},   note = {https://tanaylab.github.io/MCView, https://github.com/tanaylab/MCView}, }"},{"path":"/index.html","id":"mcview","dir":"","previous_headings":"","what":"A Shiny App for Metacell Analysis","title":"A Shiny App for Metacell Analysis","text":"MCView creates shiny-app facilitating interactive exploration annotation metacell models. Metacell described . can also explore examples MCV output PBMC Mouse organogenesis Tanay group server.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Shiny App for Metacell Analysis","text":"Install latest github release: install development version:","code":"remotes::install_github(\"tanaylab/MCView\", ref = remotes::github_release()) remotes::install_github(\"tanaylab/MCView\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Shiny App for Metacell Analysis","text":"See vignette. Tl;dr:","code":""},{"path":"/index.html","id":"initialize-a-new-project","dir":"","previous_headings":"Usage","what":"Initialize a new project:","title":"A Shiny App for Metacell Analysis","text":"","code":"MCView::create_project(\"PBMC\")"},{"path":"/index.html","id":"import-a-dataset","dir":"","previous_headings":"Usage","what":"Import a dataset:","title":"A Shiny App for Metacell Analysis","text":"Note: since version 0.2.7, MCView supports files generated new metacells version (>= 0.9). old file, can convert using script.","code":"MCView::import_dataset(project = \"PBMC\",                 dataset = \"PBMC163k\",                 anndata_file = \"raw/metacells.h5ad\")"},{"path":"/index.html","id":"run-the-app","dir":"","previous_headings":"Usage","what":"Run the app:","title":"A Shiny App for Metacell Analysis","text":"can run app R using: shell:","code":"MCView::run_app(\"PBMC\", launch.browser = TRUE) Rscript start_app.R PBMC"},{"path":"/reference/MCView-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MCView: A Shiny App for Metacell Analysis — MCView-package","title":"MCView: A Shiny App for Metacell Analysis — MCView-package","text":"MCView creates shiny-app facilitating interactive exploration annotation metacell models. Metacell described [](https://github.com/tanaylab/metacells/blob/master/vignettes/Metacells_Vignette.ipynb). can also explore examples MCV output [PBMC](https://tanaylab.weizmann.ac.il/MCV/PBMC) [Mouse organogenesis](https://tanaylab.weizmann.ac.il/MCV/MOCA) Tanay group server.","code":""},{"path":[]},{"path":"/reference/MCView-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MCView: A Shiny App for Metacell Analysis — MCView-package","text":"Maintainer: Aviezer Lifshitz aviezer.lifshitz@weizmann.ac.il","code":""},{"path":"/reference/cell_metadata_to_metacell.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"Summarise cell metadata metacell. Metadata fields can either numeric summary function func applied values field, categorical metadata fields expanded multiple metadata columns fraction cells (metacell) every category. Variables either character, factor explicitly set categorical treated categorical. cell_metadata_to_metacell converts cell metadata metacell metadata data frames. cell_metadata_to_metacell_from_h5ad extracts metadata fields cell_to_metacell cells h5ad file runs cell_metadata_to_metacell. cell_metadata_to_metacell_from_metacell1 extracts metadata fields cell_to_metacell metacell1 scdb runs cell_metadata_to_metacell.","code":""},{"path":"/reference/cell_metadata_to_metacell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"","code":"cell_metadata_to_metacell(   cell_metadata,   cell_to_metacell,   func = mean,   categorical = c() )  cell_metadata_to_metacell_from_metacell1(   scdb,   matrix,   mc,   metadata_fields,   func = mean,   categorical = c() )  cell_metadata_to_metacell_from_h5ad(   anndata_file,   metadata_fields,   func = mean,   categorical = c(),   rm_outliers = TRUE )"},{"path":"/reference/cell_metadata_to_metacell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"cell_metadata data frame column named \"cell_id\" cell id metadata columns, name delimited file contains data frame. cell_to_metacell data frame column named \"cell_id\" cell id another column named \"metacell\" metacell cell part , name delimited file contains data frame. func summary function cell metadata non categorical metadata columns (e.g. mean, median, sum) categorical vector names categorical variables. returned data frame column category values fraction cells category metacell. scdb, matrix, mc scdb, matrix mc objects metacell1. See import_dataset_metacell1 information. metadata_fields names fields anndata object$obs contains metadata cell. anndata_file path h5ad file contains output metacell2 pipeline (metacells python package). rm_outliers calculate statistics cells marked outliers (outiler=TRUE object$obs) (relevant running cell_metadata_to_metacell_from_h5ad)","code":""},{"path":"/reference/cell_metadata_to_metacell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"data frame column named \"metacell\" metadata columns cell_metadata summarized metacell using func non-categorical variables, column category categorical metadata variables incell_metadata, values fraction cells category metacell.","code":""},{"path":"/reference/cell_metadata_to_metacell.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"cell_metadata_to_metacell_from_metacell1(): cell_metadata_to_metacell_from_h5ad():","code":""},{"path":"/reference/cell_metadata_to_metacell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"","code":"set.seed(60427) n_cells <- 5e6 cell_metadata <- tibble(     cell_id = 1:n_cells,     md1 = sample(1:5, size = n_cells, replace = TRUE),     md2 = rnorm(n = n_cells),     md_categorical1 = sample(paste0(\"batch\", 1:5), size = n_cells, replace = TRUE),     md_categorical2 = sample(1:5, size = n_cells, replace = TRUE) ) #> Error in tibble(cell_id = 1:n_cells, md1 = sample(1:5, size = n_cells,     replace = TRUE), md2 = rnorm(n = n_cells), md_categorical1 = sample(paste0(\"batch\",     1:5), size = n_cells, replace = TRUE), md_categorical2 = sample(1:5,     size = n_cells, replace = TRUE)): could not find function \"tibble\"  cell_to_metacell <- tibble(     cell_id = 1:n_cells,     metacell = sample(0:1535, size = n_cells, replace = TRUE) ) #> Error in tibble(cell_id = 1:n_cells, metacell = sample(0:1535, size = n_cells,     replace = TRUE)): could not find function \"tibble\" metadata <- cell_metadata_to_metacell(     cell_metadata[, 1:3],     cell_to_metacell ) #> Error in cell_metadata_to_metacell(cell_metadata[, 1:3], cell_to_metacell): object 'cell_metadata' not found head(metadata) #> Error in head(metadata): object 'metadata' not found  metadata1 <- cell_metadata_to_metacell(     cell_metadata[, 11:3], cell_to_metacell,     func = function(x) x * 2 ) #> Error in cell_metadata_to_metacell(cell_metadata[, 11:3], cell_to_metacell,     func = function(x) x * 2): object 'cell_metadata' not found head(metadata1) #> Error in head(metadata1): object 'metadata1' not found   metadata3 <- cell_metadata_to_metacell(     cell_metadata,     cell_to_metacell,     categorical = c(\"md_categorical1\", \"md_categorical2\") ) #> Error in cell_metadata_to_metacell(cell_metadata, cell_to_metacell, categorical = c(\"md_categorical1\",     \"md_categorical2\")): object 'cell_metadata' not found  head(metadata3) #> Error in head(metadata3): object 'metadata3' not found if (FALSE) { cell_metadata_to_metacell_from_h5ad(\"cells.h5ad\", c(\"pile\", \"age\", \"batch\"), categorical = \"batch\") }"},{"path":"/reference/create_bundle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a 'deployment ready' bundle of the a project app — create_bundle","title":"Generate a 'deployment ready' bundle of the a project app — create_bundle","text":"Generate 'deployment ready' bundle project app","code":""},{"path":"/reference/create_bundle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a 'deployment ready' bundle of the a project app — create_bundle","text":"","code":"create_bundle(   project,   path = getwd(),   name = \"MCView_bundle\",   overwrite = FALSE,   self_contained = FALSE,   branch = \"latest_release\",   restart = overwrite,   permissions = NULL,   light_version = FALSE,   ... )"},{"path":"/reference/create_bundle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a 'deployment ready' bundle of the a project app — create_bundle","text":"project path project directory path path create bundle. name name folder create bundle. bundle created path/name overwrite overwrite bundle already exists self_contained include source code MCView bundle use run app. Use order ensure package always run way, regardless MCView changes. option FALSE, version MCView installed server loaded, can occasionally different one used creating app. default, code uses latest MCView release used, see branch options. branch name MCView branch include self_contained=TRUE. default, latest release used. can set parameter NULL order include current development version ('master' branch), set branch 'tanaylab/MCView' github repository. restart add file named 'restart.txt' bundle. force shiny-server restart app updated. permissions change file permissions bundle creation, e.g. \"777\". NULL - permissions changed. light_version create light version bundle, include features require heavy computation (e.g. changing Marker genes, Gene modules etc.) ... Arguments passed gert::git_clone password string callback function get passwords authentication password protected ssh keys. Defaults askpass checks getOption('askpass'). ssh_key path object containing ssh private key. default look keys ssh-agent credentials::ssh_key_info. verbose display progress info downloading mirror use --mirror flag url remote url. Typically starts https://github.com/ public repositories, https://yourname@github.com/ git@github.com/ private repos. prompted password pat needed. bare use --bare flag","code":""},{"path":"/reference/create_bundle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a 'deployment ready' bundle of the a project app — create_bundle","text":"Create minimal shiny app path/name directory contain: app.R file. project config cache. bundle can deployed shiny-server, shinyapps.io environment supports serving shiny apps. Note: deploying services - make sure MCView package installed.","code":""},{"path":"/reference/create_bundle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a 'deployment ready' bundle of the a project app — create_bundle","text":"","code":"if (FALSE) { MCView::create_bundle(project = \"PBMC\", path = getwd(), name = \"PBMC\")  # latest release MCView::create_bundle(project = \"PBMC\", path = getwd(), name = \"PBMC\", self_contained = TRUE)  # development version MCView::create_bundle(project = \"PBMC\", path = getwd(), name = \"PBMC\", self_contained = TRUE, branch = NULL)  # specific branch MCView::create_bundle(project = \"PBMC\", path = getwd(), name = \"PBMC\", self_contained = TRUE, branch = \"feat@atlas-projection\") }"},{"path":"/reference/create_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a configuration folder for a project — create_project","title":"Create a configuration folder for a project — create_project","text":"Create project directory default configuration files directory structure. edit_config == TRUE, text editor opened order edit project config.yaml file.","code":""},{"path":"/reference/create_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a configuration folder for a project — create_project","text":"","code":"create_project(   project,   title = \"MCView\",   tabs = NULL,   help = FALSE,   selected_gene1 = NULL,   selected_gene2 = NULL,   selected_mc1 = NULL,   selected_mc2 = NULL,   datasets = NULL,   other_params = NULL,   edit_config = TRUE,   atlas = FALSE )"},{"path":"/reference/create_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a configuration folder for a project — create_project","text":"project path project title title app. shown top left screen. tabs Controls tabs show left sidebar order. Options : \"QC\", \"Manifold\", \"Genes\", \"Query\", \"Atlas\", \"Markers\", \"Gene modules\", \"Projected-fold\", \"Diff. Expression\", \"Cell types\", \"Flow\", \"Annotate\", \"\". NULL - default tabs set. projects atlas projections, please set atlas TRUE. help Controls wether start app help modal (introjs). Help messages can edited help.yaml file (see 'Architecture' vignette). selected_gene1, selected_gene2 default genes selected (screen gene selection). parameter missing, 2 genes highest max(expr)-min(expr) first dataset chosen. selected_mc1, selected_mc2 default metacells selected Diff. Expression tab. datasets named list additional per-dataset parameters. Current parameters include default visualization properties projection scatter plots. other_params Named list additional parameters projection_point_size, projection_point_stroke, scatters_point_size scatters_stroke_size edit_config open file editor config file editing atlas use default configuration atlas projections (relevant tabs NULL)","code":""},{"path":"/reference/create_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a configuration folder for a project — create_project","text":"","code":"if (FALSE) { dir.create(\"raw\") download.file(\"http://www.wisdom.weizmann.ac.il/~atanay/metac_data/PBMC_processed.tar.gz\", \"raw/#' PBMC_processed.tar.gz\") untar(\"raw/PBMC_processed.tar.gz\", exdir = \"raw\") create_project(\"PBMC\") }"},{"path":"/reference/dataset_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"List datasets in a project — dataset_ls","title":"List datasets in a project — dataset_ls","text":"List datasets project","code":""},{"path":"/reference/dataset_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List datasets in a project — dataset_ls","text":"","code":"dataset_ls(project)"},{"path":"/reference/dataset_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List datasets in a project — dataset_ls","text":"project path project directory","code":""},{"path":"/reference/dataset_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List datasets in a project — dataset_ls","text":"names existing datasets project","code":""},{"path":"/reference/dataset_ls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List datasets in a project — dataset_ls","text":"","code":"if (FALSE) { dataset_ls(\"PBMC\") }"},{"path":"/reference/dataset_rm.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a dataset from a project — dataset_rm","title":"Remove a dataset from a project — dataset_rm","text":"Remove dataset project","code":""},{"path":"/reference/dataset_rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a dataset from a project — dataset_rm","text":"","code":"dataset_rm(project, dataset)"},{"path":"/reference/dataset_rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a dataset from a project — dataset_rm","text":"project path project directory dataset name dataset remove","code":""},{"path":"/reference/dataset_rm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a dataset from a project — dataset_rm","text":"","code":"if (FALSE) { dataset_rm(\"PBMC\", \"PBMC163k\") }"},{"path":"/reference/import_cell_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Import cell metadata to an MCView dataset — import_cell_metadata","title":"Import cell metadata to an MCView dataset — import_cell_metadata","text":"Import metadata cell level MCView. metadata can summarised metacell level setting summarise_md TRUE, case shown \"Genes\" \"Markers\" tabs. order view data samples level, additional sample identifier given column named \"samp_id\" cell_metadata data frame.","code":""},{"path":"/reference/import_cell_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import cell metadata to an MCView dataset — import_cell_metadata","text":"","code":"import_cell_metadata(   project,   dataset,   cell_metadata,   cell_to_metacell,   summarise_md = FALSE,   add_samples_tab = TRUE,   ... )"},{"path":"/reference/import_cell_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import cell metadata to an MCView dataset — import_cell_metadata","text":"cell_metadata data frame column named \"cell_id\" cell id metadata columns, name delimited file contains data frame. activating \"Samples\" tab, data frame additional column named \"samp_id\" sample identifier per cell (e.g., batch id, patient etc.) cell_to_metacell data frame column named \"cell_id\" cell id another column named \"metacell\" metacell cell part , name delimited file contains data frame. summarise_md summarise cell metadata metacell level. add_samples_tab add 'Samples' tab config file exist ... Arguments passed cell_metadata_to_metacell func summary function cell metadata non categorical metadata columns (e.g. mean, median, sum) categorical vector names categorical variables. returned data frame column category values fraction cells category metacell.","code":""},{"path":"/reference/import_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a dataset to an MCView project — import_dataset","title":"Import a dataset to an MCView project — import_dataset","text":"Read anndata file output python metacells package, import metacell dataset MCView. project can multiple datasets can app using right sidebar.","code":""},{"path":"/reference/import_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a dataset to an MCView project — import_dataset","text":"","code":"import_dataset(   project,   dataset,   anndata_file,   cell_type_field = NULL,   metacell_types_file = NULL,   cell_type_colors_file = NULL,   outliers_anndata_file = NULL,   cluster_metacells = TRUE,   cluster_k = NULL,   metadata_fields = NULL,   metadata = NULL,   metadata_colors = NULL,   cell_metadata = NULL,   cell_to_metacell = NULL,   gene_modules_file = NULL,   gene_modules_k = NULL,   calc_gg_cor = TRUE,   gene_names = NULL,   metacell_graphs = NULL,   atlas_project = NULL,   atlas_dataset = NULL,   projection_weights_file = NULL,   copy_atlas = TRUE,   minimal_max_log_fraction = -13,   minimal_relative_log_fraction = 2,   ... )"},{"path":"/reference/import_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a dataset to an MCView project — import_dataset","text":"project path project dataset name dataset, e.g. \"PBMC\" anndata_file path h5ad file contains output metacell2 pipeline (metacells python package) loaded anndata object format. cell_type_field name field anndata object$obs contains cell type (optional). field exist metacell_types_file missing, MCView first look field named 'projected_type', 'type', 'cell_type' 'cluster' object$obs (order), exists MCView cluster metacell matrix using kmeans++ algorithm (tglkmeans package). metacell_types_file path tabular file (csv,tsv) cell type assignement metacell. file column named \"metacell\" metacell ids another column named \"cell_type\", \"cluster\" cell type assignment. Metacell ids exists data ignored.  parameter cell_type_field missing cluster_metacells=TRUE, MCView cluster metacell matrix using kmeans++ algorithm (tglkmeans package).  file field named 'color' cell_type_colors_file=NULL, cell types colors used. cell_type_colors_file path tabular file (csv,tsv) color assignement cell type. file column named \"cell_type\" \"cluster\" cell types another column named \"color\" color assignment.  case metacell types (given file anndata_file) contain types present cell type colors file, MCView use chameleon package assign color addition cell type colors.  missing, metacell_types_file 'color' field, MCView use chameleon package assign color cell type.  atlas given (using atlas_project atlas_dataset), cell types atlas, atlas colors used. outliers_anndata_file path anndata file outliers (optional). enable, default, following tabs: [\"Outliers\", \"Similar-fold\", \"Deviant-fold\"]. See metacells python package details. cluster_metacells TRUE metacell type given (via metacell_types_file cell_type_field - implicit explicit), MCView cluster metacell matrix using kmeans++ algorithm (tglkmeans package). cluster_k number clusters initial metacell clustering. NULL - number clusters determined metacell contain 16 cells average. metadata_fields names fields anndata object$obs contains metadata metacell.  fields can either numeric categorical.   can use cell_metadata_to_metacell convert categorical numeric score (e.g. using fraction category). can use '' order import fields  anndata object. metadata can either data frame column named \"metacell\" metacell id metadata columns name delimited file contains data frame. See metadata_fields details. metadata_colors named list colors metadata column, name yaml file list. numerical metadata columns, colors given list first element vector colors second element vector breaks.  colors given breaks implicitly determined minimum maximum metadata field.  categorical metadata columns, color can given either named vector names categories values colors, named list first element named 'colors' holds colors, second element called 'categories' holds categories. cell_metadata data frame column named \"cell_id\" cell id metadata columns, name delimited file contains data frame. activating \"Samples\" tab, data frame additional column named \"samp_id\" sample identifier per cell (e.g., batch id, patient etc.) cell_to_metacell data frame column named \"cell_id\" cell id another column named \"metacell\" metacell cell part , name delimited file contains data frame. gene_modules_file path tabular file (csv,tsv) assignment genes gene modules. field named \"gene\" gene name field named \"module\" name gene module. gene_modules_k number clusters initial gene module calculation. NULL - number clusters determined gene module contain 16 genes average. calc_gg_cor Calculate top 30 correlated anti-correlated genes gene. computation can heavy large datasets weaker machines, can set calc_gg_cor=FALSE skip . Note feature missing app. gene_names use alternative gene names (optional). data frame column called 'gene_name' original gene name (appears 'h5ad' file) another column called 'alt_name' gene name use MCView. Genes appear table changed. metacell_graphs named list metacell graphs files containing metacell graphs. graph data frame columns named \"\", \"\" \"weight\" ids metacells weight edge. list named, names 'graph1', 'graph2' . Note graph named \"metacell\" reserved metacell graph. atlas_project path MCView project contains atlas. atlas_dataset name atlas dataset projection_weights_file Path tabular file (csv,tsv) following fields \"query\", \"atlas\" \"weight\". file output metacells projection algorithm. copy_atlas copy atlas MCView current project. FALSE - symbolic link created instead. minimal_max_log_fraction choosing marker genes: take genes least one value (log fraction units - normalized egc) threshold minimal_relative_log_fraction choosing marker genes: take genes relative log fraction (mc_fp) value ... Arguments passed create_project title title app. shown top left screen. tabs Controls tabs show left sidebar order. Options : \"QC\", \"Manifold\", \"Genes\", \"Query\", \"Atlas\", \"Markers\", \"Gene modules\", \"Projected-fold\", \"Diff. Expression\", \"Cell types\", \"Flow\", \"Annotate\", \"\". NULL - default tabs set. projects atlas projections, please set atlas TRUE. help Controls wether start app help modal (introjs). Help messages can edited help.yaml file (see 'Architecture' vignette). selected_gene1,selected_gene2 default genes selected (screen gene selection). parameter missing, 2 genes highest max(expr)-min(expr) first dataset chosen. selected_mc1,selected_mc2 default metacells selected Diff. Expression tab. datasets named list additional per-dataset parameters. Current parameters include default visualization properties projection scatter plots. other_params Named list additional parameters projection_point_size, projection_point_stroke, scatters_point_size scatters_stroke_size edit_config open file editor config file editing atlas use default configuration atlas projections (relevant tabs NULL)","code":""},{"path":"/reference/import_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a dataset to an MCView project — import_dataset","text":"invisibly returns AnnDataR6 object read anndata_file","code":""},{"path":"/reference/import_dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import a dataset to an MCView project — import_dataset","text":"function create directory project/cache/dataset contain objects used MCView shiny app (metacell matrix). addition, can supply file type assignment metacell (metacell_types_file) file color assignment metacell type (cell_type_colors_file).","code":""},{"path":"/reference/import_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a dataset to an MCView project — import_dataset","text":"","code":"if (FALSE) { dir.create(\"raw\") download.file(     \"http://www.wisdom.weizmann.ac.il/~atanay/metac_data/PBMC_processed.tar.gz\",     \"raw/PBMC_processed.tar.gz\" ) untar(\"raw/PBMC_processed.tar.gz\", exdir = \"raw\") create_project(\"PBMC\") import_dataset(\"PBMC\", \"PBMC163k\", \"raw/metacells.h5ad\") }"},{"path":"/reference/import_dataset_metacell1.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","title":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","text":"Read objects metacell R package import metacell dataset MCView.","code":""},{"path":"/reference/import_dataset_metacell1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","text":"","code":"import_dataset_metacell1(   project,   dataset,   scdb,   matrix,   mc,   mc2d,   metacell_types_file,   cell_type_colors_file,   gene_modules_file = NULL,   gene_modules_k = NULL,   calc_gg_cor = TRUE,   network = NULL,   time_annotation_file = NULL,   time_bin_field = NULL,   metadata_fields = NULL,   categorical = c(),   ... )"},{"path":"/reference/import_dataset_metacell1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","text":"project path project dataset name dataset, e.g. \"PBMC\" scdb path R metacell single cell RNA database matrix name umi matrix use mc name metacell object use mc2d name 2d projection object use metacell_types_file path tabular file (csv,tsv) cell type assignement metacell. file column named \"metacell\" metacell ids another column named \"cell_type\" \"cluster\" cell type assignment. Metacell ids exists data ignored. addition, file can column named \"age\" \"mc_age\" age metadata per metacell cell_type_colors_file path tabular file (csv,tsv) color assignement cell type. file column named \"cell_type\" \"cluster\" cell types another column named \"color\" color assignment. Cell types exist metacell types ignored. gene_modules_file path tabular file (csv,tsv) assignment genes gene modules. field named \"gene\" gene name field named \"module\" name gene module. gene_modules_k number clusters initial gene module calculation. NULL - number clusters determined gene module contain 16 genes average. calc_gg_cor Calculate top 30 correlated anti-correlated genes gene. computation can heavy large datasets weaker machines, can set calc_gg_cor=FALSE skip . Note feature missing app. network name network object use (optional) time_annotation_file file names time bins (optional, relevant networks/flows). field named \"time_bin\" time bin id another field named \"time_desc\" contains description time bin time_bin_field name field cell_metadata contains time bin per cell (optional) metadata_fields names fields mat@cell_metadata contains metadata per cell summarized using cell_metadata_to_metacell.  fields can either numeric categorical.   can use cell_metadata_to_metacell convert categorical numeric score (e.g. using fraction category). categorical metadata fields treated categorical (optional) ... Arguments passed create_project title title app. shown top left screen. tabs Controls tabs show left sidebar order. Options : \"QC\", \"Manifold\", \"Genes\", \"Query\", \"Atlas\", \"Markers\", \"Gene modules\", \"Projected-fold\", \"Diff. Expression\", \"Cell types\", \"Flow\", \"Annotate\", \"\". NULL - default tabs set. projects atlas projections, please set atlas TRUE. help Controls wether start app help modal (introjs). Help messages can edited help.yaml file (see 'Architecture' vignette). selected_gene1,selected_gene2 default genes selected (screen gene selection). parameter missing, 2 genes highest max(expr)-min(expr) first dataset chosen. selected_mc1,selected_mc2 default metacells selected Diff. Expression tab. datasets named list additional per-dataset parameters. Current parameters include default visualization properties projection scatter plots. other_params Named list additional parameters projection_point_size, projection_point_stroke, scatters_point_size scatters_stroke_size edit_config open file editor config file editing atlas use default configuration atlas projections (relevant tabs NULL)","code":""},{"path":"/reference/import_dataset_metacell1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","text":"result directory project/cache/dataset contain objects used MCView shiny app (metacell matrix). addition, can supply file type assignment metacell (metacell_types_file) file color assignment metacell type (cell_type_colors_file). Make sure R metacell package installed order use function. network, time_annotation_file time_bin_field relevant computed flows/networks dataset therefore optional. order add time annotation dataset : 1. Add column named \"mc_age\" \"age\" metacell_types_file time per metacell 2. Create time_annotation_file id time bin description","code":""},{"path":"/reference/import_dataset_metacell1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","text":"","code":"if (FALSE) { import_dataset_metacell1(     \"embflow\",     \"153embs\",     scdb = \"raw/scrna_db\",     matrix = \"embs\",     mc = \"embs\",     mc2d = \"embs\",     metacell_types_file = \"raw/metacell-types.csv\",     cell_type_colors_file = \"raw/cell-type-colors.csv\",     network = \"embs\",     time_annotation_file = \"raw/time-annot.tsv\",     time_bin_field = \"age_group\" ) }"},{"path":"/reference/print.gt_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for ","title":"Print method for ","text":"Print method \"gt_custom\" class overriding print function, similiar one shiny/render-plot.R: https://github.com/rstudio/shiny/blob/main/R/render-plot.R order provide separate ggplot_build gtable objects","code":""},{"path":"/reference/print.gt_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for ","text":"","code":"# S3 method for gt_custom print(x)"},{"path":"/reference/print.gt_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for ","text":"x object class \"gt_custom\"","code":""},{"path":"/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the MCView Application — run_app","title":"Run the MCView Application — run_app","text":"Load project cache run MCView application.","code":""},{"path":"/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the MCView Application — run_app","text":"","code":"run_app(project, port = NULL, host = NULL, launch.browser = FALSE, ...)"},{"path":"/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the MCView Application — run_app","text":"project path project run. port app port host app host launch.browser launch web browser app start ... Arguments passed shiny::shinyApp ui UI definition app (example, call fluidPage() nested controls). bookmarking enabled (see enableBookmarking), must single argument function returns UI definition. server function three parameters: input, output, session. function called session ensuring app independent. onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app.","code":""},{"path":"/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the MCView Application — run_app","text":"","code":"if (FALSE) { MCView::run_app(\"PBMC\") MCView::run_app(project = \"PBMC\", port = 5555, host = \"127.0.0.1\") }"},{"path":"/reference/update_cell_type_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Update color assignment for each cell type — update_cell_type_colors","title":"Update color assignment for each cell type — update_cell_type_colors","text":"Change color assignments cell type ones listed cell_type_colors_file.","code":""},{"path":"/reference/update_cell_type_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update color assignment for each cell type — update_cell_type_colors","text":"","code":"update_cell_type_colors(project, dataset, cell_type_colors_file)"},{"path":"/reference/update_cell_type_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update color assignment for each cell type — update_cell_type_colors","text":"project path project directory dataset name dataset, e.g. \"PBMC\" cell_type_colors_file path tabular file (csv,tsv) color assignement cell type. file column named \"cell_type\" \"cluster\" cell types another column named \"color\" color assignment. Cell types exist metacell types ignored, changed names cell types also update metacell types (using update_metacell_types). function also accepts output 'export' button application annotation page. parameter missing, MCView use chameleon package assign color cell type.","code":""},{"path":"/reference/update_cell_type_colors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update color assignment for each cell type — update_cell_type_colors","text":"usually done first iteration annotation using \"Annotate\" tab MCView annotation, can export valid cell_type_colors_file. file column named \"cell_type\" \"cluster\" cell types another column named \"color\" color assignment. Note exported file __MCView__ app contains additional fields ignored function. hood - MCView updates file named \"cell_type_colors.tsv\" project/cache/dataset, can also edited manually.","code":""},{"path":"/reference/update_cell_type_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update color assignment for each cell type — update_cell_type_colors","text":"","code":"if (FALSE) { update_metacell_types(\"PBMC\", \"PBMC163k\", \"raw/cluster-colors.csv\") }"},{"path":"/reference/update_gene_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Update gene modules — update_gene_modules","title":"Update gene modules — update_gene_modules","text":"Change gene modules MCView app.","code":""},{"path":"/reference/update_gene_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update gene modules — update_gene_modules","text":"","code":"update_gene_modules(project, dataset, gene_modules_file)"},{"path":"/reference/update_gene_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update gene modules — update_gene_modules","text":"project path project dataset name dataset, e.g. \"PBMC\" gene_modules_file path tabular file (csv,tsv) assignment genes gene modules. field named \"gene\" gene name field named \"module\" name gene module.","code":""},{"path":"/reference/update_gene_modules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update gene modules — update_gene_modules","text":"usually done first iteration annotation using \"Gene modules\" tab MCView annotation, can export valid gene_modules_file. file column named \"gene\" gene names another column named \"module\" id gene module. Note exported file __MCView__ app might contain additional fields ignored function. hood - MCView updates file named \"gene_modules.tsv\" project/cache/dataset, can also edited manually.","code":""},{"path":"/reference/update_gene_modules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update gene modules — update_gene_modules","text":"","code":"if (FALSE) { update_gene_modules(\"PBMC\", \"PBMC163k\", \"raw/gene-modules.csv\") }"},{"path":"/reference/update_metacell_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Update cell type assignment for each metacell — update_metacell_types","title":"Update cell type assignment for each metacell — update_metacell_types","text":"Change cell type assignments metacell ones listed metacell_types_file.","code":""},{"path":"/reference/update_metacell_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update cell type assignment for each metacell — update_metacell_types","text":"","code":"update_metacell_types(project, dataset, metacell_types_file)"},{"path":"/reference/update_metacell_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update cell type assignment for each metacell — update_metacell_types","text":"project path project directory dataset name dataset, e.g. \"PBMC\" metacell_types_file path tabular file (csv,tsv) cell type assignement metacell. file column named \"metacell\" metacell ids another column named \"cell_type\" \"cluster\" cell type assignment. Metacell ids exists data ignored.","code":""},{"path":"/reference/update_metacell_types.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update cell type assignment for each metacell — update_metacell_types","text":"usually done first iteration annotation using \"Annotate\" tab MCView annotation, can export valid metacell_types_file. file column named \"metacell\" metacell ids another column named \"cell_type\" \"cluster\" cell type assignment. Note exported file __MCView__ app contains additional fields ignored function. hood - MCView updates file named \"metacell_types.tsv\" project/cache/dataset, can also edited manually. file contains additional 'color' field, cell type colors updated well.","code":""},{"path":"/reference/update_metacell_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update cell type assignment for each metacell — update_metacell_types","text":"","code":"if (FALSE) { update_metacell_types(\"PBMC\", \"PBMC163k\", \"raw/metacell-clusters.csv\") }"},{"path":"/reference/update_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Update metadata for a dataset — update_metadata","title":"Update metadata for a dataset — update_metadata","text":"Update metadata dataset","code":""},{"path":"/reference/update_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update metadata for a dataset — update_metadata","text":"","code":"update_metadata(   project,   dataset,   metadata = NULL,   metadata_fields = NULL,   anndata_file = NULL,   overwrite = FALSE )"},{"path":"/reference/update_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update metadata for a dataset — update_metadata","text":"project path project dataset name dataset, e.g. \"PBMC\" metadata can either data frame column named \"metacell\" metacell id metadata columns name delimited file contains data frame. See metadata_fields details. metadata_fields names fields anndata object$obs contains metadata metacell.  fields can either numeric categorical.   can use cell_metadata_to_metacell convert categorical numeric score (e.g. using fraction category). can use '' order import fields  anndata object. anndata_file path h5ad file contains output metacell2 pipeline (metacells python package) loaded anndata object format. overwrite overwrite existing metadata. FALSE - override existing metadata fields.","code":""},{"path":"/reference/update_metadata_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Update metadata colors for a dataset — update_metadata_colors","title":"Update metadata colors for a dataset — update_metadata_colors","text":"Update metadata colors dataset","code":""},{"path":"/reference/update_metadata_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update metadata colors for a dataset — update_metadata_colors","text":"","code":"update_metadata_colors(project, dataset, metadata_colors, overwrite = FALSE)"},{"path":"/reference/update_metadata_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update metadata colors for a dataset — update_metadata_colors","text":"project path project dataset name dataset, e.g. \"PBMC\" metadata_colors named list colors metadata column, name yaml file list. numerical metadata columns, colors given list first element vector colors second element vector breaks.  colors given breaks implicitly determined minimum maximum metadata field.  categorical metadata columns, color can given either named vector names categories values colors, named list first element named 'colors' holds colors, second element called 'categories' holds categories. overwrite overwrite existing colors. FALSE - override colors existing metadata fields.","code":""},{"path":"/news/index.html","id":"mcview-0299000","dir":"Changelog","previous_headings":"","what":"MCView 0.2.9.9000","title":"MCView 0.2.9.9000","text":"Changed zero-fold per gene plot show expression vs zero-fold. Added two static plots tab. Added “top-correlated” panel “Cell types” tab. Added “inner-std” plot QC panel. Added “Stdev-fold” tab. Fix: differential expression metacells work recent version qs.","code":""},{"path":"/news/index.html","id":"mcview-029","dir":"Changelog","previous_headings":"","what":"MCView 0.2.9","title":"MCView 0.2.9","text":"Fixed import according newest metacells version.","code":""},{"path":"/news/index.html","id":"mcview-028","dir":"Changelog","previous_headings":"","what":"MCView 0.2.8","title":"MCView 0.2.8","text":"Added ‘QC’ tab. Please re-import dataset order enable . Moved ‘gene/gene’ ‘projection’ controls plot. Added ‘excluded_tabs’ config file. Added footer MCView metacells versions. modifications ‘Genes’ tab layout. Added option color 2D projection axis Gene/Gene plot.","code":""},{"path":"/news/index.html","id":"mcview-027","dir":"Changelog","previous_headings":"","what":"MCView 0.2.7","title":"MCView 0.2.7","text":"Added QC metrics manifold tab. Fix: import_cell_metadata overwriting existing metadata Fix: import crashed metacell_types missing colors","code":""},{"path":"/news/index.html","id":"mcview-026","dir":"Changelog","previous_headings":"","what":"MCView 0.2.6","title":"MCView 0.2.6","text":"Use new metacells version. Note old anndata objects work version without conversion. Added option bundle ‘light’ version without option change genes heatmaps. Fixed resolution heatmap plots. Added ‘rename’ modal ‘Annotate’ tab. Fixed order negative correlations left panels. Fixes #127. Added option use ‘gene_names’ parameter atlas projection. Use name dataset title default. Rasterized Type Prediction plot.","code":""},{"path":"/news/index.html","id":"mcview-025","dir":"Changelog","previous_headings":"","what":"MCView 0.2.5","title":"MCView 0.2.5","text":"Added tab selector. Runtime optimizations: load tabs click. css fixes. Changed default ‘’ document. Added preloader spinner. Allow using run_app bundle folder. Added cell metadata support metacell1 import. Fix: clicking cell type manifold legend sometimes aligned gene/gene plot. Fix: categorical metadata tooltip wrong projection plots. Changed metacell selectors search “contains” instead “startWith” behaviour.","code":""},{"path":"/news/index.html","id":"mcview-024","dir":"Changelog","previous_headings":"","what":"MCView 0.2.4","title":"MCView 0.2.4","text":"Add option add metacells clipboard number runtime optimizations: use virtualSelectInput","code":""},{"path":"/news/index.html","id":"mcview-023","dir":"Changelog","previous_headings":"","what":"MCView 0.2.3","title":"MCView 0.2.3","text":"Added support gene modules (‘Gene modules’ tab). Added ‘Outliers’ tab. Added Clipboard functionality. Added support alternative gene names. Added control number clusters / whether cluster import phase. Added new selection controls Annotate tab (‘Gears’ symbol upper right ‘Metacell Annotation’ box). Bug fix: heatmaps crashed single gene chosen. Bug fix: automatically color cell types missing cell type colors file. Bug fix: Diff expr. crashed single cell type. Bug fix: Wrong tooltip metadata/metadata scatter plot. Bug fix: Annotation colors markers heatmap scaled relative current zoom. Added control marker selection parameters import_dataset. # MCView 0.2.2 Added support atlas projections (‘Atlas’, ‘Query’ ‘Projected-fold’ tabs) Added tooltip interactive clicks heatmaps (‘Markers’ ‘Projected-fold’ tabs) Added zoom heatmaps. Homogenize Annotate, Diff. Expr Genes tabs. Added ‘Cell types’ tab. Added support cell metadata using ‘Samples’ tab. Allow coloring categorical metadata annotations. Moved flow graphs tab named ‘Flow’. create_project import_dataset now accept config file parameters. Added option force x y limits gene/gene plots. Added option show x=y line gene/gene plots.","code":""},{"path":"/news/index.html","id":"mcview-021","dir":"Changelog","previous_headings":"","what":"MCView 0.2.1","title":"MCView 0.2.1","text":"Added Metadata tab. Added Markers tab. Added inner-fold matrix markers tab. Added option compare cell types Metacell tab. Added download button. Added busy spinner. create_project now takes path (instead path + project name) implicitly create project importing import cell type annotation using single file contains metacell types cell type colors. Bug fixes: issues #48, #51, #52, #60, #62 . Changed gene selectors manifold tab -demand (reduce initialization time). Added () caching.","code":""},{"path":"/news/index.html","id":"mcview-021-1","dir":"Changelog","previous_headings":"","what":"MCView 0.2.1","title":"MCView 0.2.1","text":"bug fixes. See issues #36, #37, #38, #40, #41 #42.","code":""},{"path":"/news/index.html","id":"mcview-020","dir":"Changelog","previous_headings":"","what":"MCView 0.2.0","title":"MCView 0.2.0","text":"First stable version.","code":""}]
