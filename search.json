[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Weizmann Institute Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/Architecture.html","id":"projects","dir":"Articles","previous_headings":"","what":"Projects","title":"Architecture","text":"project standard library structure binds config cache, e.g.: example shows directory structure project named my_project contains two metacell datasets - wt ko. Multiple functions MCView package accept project path expect find configuration files cache standard relative path. Creation project can done running: open text editor order edit configuration file.","code":"my_project ├── config │   ├── about.Rmd │   ├── config.yaml │   └── help.yaml └── cache     ├── ko     └── wt MCView::create_project(\"my_project\")"},{"path":"/articles/Architecture.html","id":"configuration-files","dir":"Articles","previous_headings":"","what":"Configuration files","title":"Architecture","text":"MCView project can 3 configuration files: config.yaml - main configuration file (required) help.yaml - help text messages (optional) .Rmd - text tab (optional) main configuration file (config/config.yaml) contains parameters:","code":"title: MCView tabs: [\"Manifold\", \"Genes\", \"Markers\", \"Diff. Expression\", \"Annotate\", \"About\"] # which tabs to show help: false # set to true to show introjs help on start selected_gene1: Foxc1 # Default selected gene1 (optional) selected_gene2: Twist1 # Default selected gene2 (optional) selected_mc1: 1 # Default selected metacell1  selected_mc2: 2 # Default selected metacell2 datasets: # optional parameters per dataset   PBMC163k:     min_d: 0.3 # default minimal edge distance to show in projection plots     # projection_point_size: 1 # Default size for projection points     # projection_stroke: 0.1 # Default line stroke for projection points     # scatters_point_size: 2 # Default size for scatter plot (such as gene gene plots)     # scatters_stroke_size: 0.1 # Default line stroke for scatter plot (such as gene gene plots)"},{"path":"/articles/Architecture.html","id":"title","dir":"Articles","previous_headings":"Configuration files","what":"title","title":"Architecture","text":"title app. shown top left screen.","code":""},{"path":"/articles/Architecture.html","id":"tabs","dir":"Articles","previous_headings":"Configuration files","what":"tabs","title":"Architecture","text":"Controls tabs show left sidebar order. Options : want remove tabs? Many times want separate 'development' version MCView app allows users re-annotate data 'production' version contains data analysis tabs. can done removing \"Annotate\" tabs field. addition, might want always start app \"Genes\" tab instead \"Manifold\", can done changing order tabs field.","code":"[\"Manifold\", \"Genes\", \"Markers\", \"Diff. Expression\", \"Annotate\", \"About\"]"},{"path":"/articles/Architecture.html","id":"help","dir":"Articles","previous_headings":"Configuration files","what":"help","title":"Architecture","text":"Controls wether start app help modal (introjs). Help messages can edited help.yaml file (see ).","code":""},{"path":"/articles/Architecture.html","id":"selected_gene1selected_gene2-optional","dir":"Articles","previous_headings":"Configuration files","what":"selected_gene1/selected_gene2 (optional)","title":"Architecture","text":"default genes selected (screen gene selection). parameter missing, 2 genes highest max(expr)-min(expr) first dataset chosen.","code":""},{"path":"/articles/Architecture.html","id":"selected_mc1selected_mc2","dir":"Articles","previous_headings":"Configuration files","what":"selected_mc1/selected_mc2","title":"Architecture","text":"default metacells selected Diff. Expression tab.","code":""},{"path":"/articles/Architecture.html","id":"datasets-optional","dir":"Articles","previous_headings":"Configuration files","what":"datasets (optional)","title":"Architecture","text":"Additional per-dataset parameters. Current parameters include default visualization properties projection scatter plots.","code":""},{"path":"/articles/Architecture.html","id":"help-yaml","dir":"Articles","previous_headings":"Configuration files","what":"help.yaml","title":"Architecture","text":"file contains help messages used introjs. changed general, except maybe introduction message. Note messages refer shiny elements, look code order identify element message.","code":""},{"path":"/articles/Architecture.html","id":"about-rmd","dir":"Articles","previous_headings":"Configuration files","what":"about.Rmd","title":"Architecture","text":"Rmarkdown file contains contents page. Edit wish, remember can remove \"\" tab altogether using tabs parameter config.yaml.","code":""},{"path":"/articles/Architecture.html","id":"cached-data","dir":"Articles","previous_headings":"","what":"Cached data","title":"Architecture","text":"order run, MCView needs pre-process metacell matrix cluster annotations. can done MCView::import_dataset function accepts project path, dataset name path h5ad file generated metacell1. cached files saved cache section project folder, separate folder dataset. example: can list datasets project using: removal dataset can done :","code":"└── cache     ├── ko     └── wt MCView::dataset_ls(\"my_project\") MCView::dataset_rm(\"my_project\", \"dataset\")"},{"path":"/articles/Architecture.html","id":"running-the-app","dir":"Articles","previous_headings":"","what":"Running the app","title":"Architecture","text":"Running app can done running:","code":"MCView::run_app(project = \"/path/to/my/project\")"},{"path":"/articles/Architecture.html","id":"deployment","dir":"Articles","previous_headings":"","what":"Deployment","title":"Architecture","text":"MCView can generate 'deployment ready' version app running: create minimal shiny app \"/path///bundle/my_project\" directory contain: app.R file. project config cache. bundle can deployed shiny-server running: environment supports serving shiny apps. Note deploying services make sure MCView package installed.","code":"MCView::create_bundle(project = \"/path/to/my/project\", path = \"/path/to/the/bundle\", name = \"my_project\") rsconnect::deployApp(appDir = \"/path/to/the/bundle/my_project\")"},{"path":"/articles/Docker.html","id":"pull-the-image","dir":"Articles","previous_headings":"","what":"Pull the image","title":"Docker","text":"Pull MCView docker image using:","code":"docker pull tanaylab/mcview:latest"},{"path":"/articles/Docker.html","id":"create-a-project","dir":"Articles","previous_headings":"","what":"Create a project","title":"Docker","text":"","code":"mkdir PBMC docker run -v $(pwd)/PBMC:/project tanaylab/mcview R -e 'MCView::create_project(\"/project/PBMC\")'"},{"path":"/articles/Docker.html","id":"import-a-dataset","dir":"Articles","previous_headings":"","what":"Import a dataset","title":"Docker","text":"Download PBMC example dataset: Import dataset:","code":"wget http://www.wisdom.weizmann.ac.il/~atanay/metac_data/PBMC_processed.tar.gz tar xvzf PBMC_processed.tar.gz docker run -v $(pwd):/workdir tanaylab/mcview R -e 'MCView::import_dataset(\"/workdir/PBMC\", dataset = \"PBMC163k\", anndata_file = \"/workdir/metacells.h5ad\", cell_type_colors_file = \"/workdir/cluster-colors.csv\")'"},{"path":"/articles/Docker.html","id":"run-the-app","dir":"Articles","previous_headings":"","what":"Run the app","title":"Docker","text":"can now go port 3838 machine view running app.","code":"docker run -v $(pwd)/PBMC:/project -p 3838:3838 tanaylab/mcview"},{"path":"/articles/MCView.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Getting started with MCView","text":"start downloading PBMC dataset pre-processed using metacells python package. commands end result two files named \"raw/pbmc_metacells.h5ad\" \"raw/cluster-colors.csv\" import MCView next steps.","code":"library(MCView) dir.create(\"raw\") download.file(\"http://www.wisdom.weizmann.ac.il/~atanay/metac_data/PBMC_processed.tar.gz\", \"raw/PBMC_processed.tar.gz\") untar(\"raw/PBMC_processed.tar.gz\", exdir = \"raw\")"},{"path":"/articles/MCView.html","id":"create-a-project","dir":"Articles","previous_headings":"","what":"Create a project","title":"Getting started with MCView","text":"first step running MCView generating project directory structure: text editor opened PBMC/config/config.yaml file: can edit parameters want, add parameters per dataset, see architecture vignette full description config parameters.","code":"create_project(\"PBMC\") title: MCView tabs: [\"Manifold\", \"Genes\", \"Markers\", \"Diff. Expression\",  \"Annotate\", \"About\"] # which tabs to show help: false # set to true to show introjs help on start # selected_gene1: Foxc1 # Default selected gene1 # selected_gene2: Twist1 # Default selected gene2 selected_mc1: 1 # Default selected metacell1  selected_mc2: 2 # Default selected metacell2"},{"path":"/articles/MCView.html","id":"import","dir":"Articles","previous_headings":"","what":"Import","title":"Getting started with MCView","text":"Next, import PBMC dataset project created. project can contain multiple dataset, switching can done right sidebar. pre-process metacell dataset order view shiny app: important field anndata field points h5ad file downloaded. can see also specified field h5ad object pre-computed cluster assignments per metacell, path file contains color assignment per cluster, optional, MCView can generate initial clustering coloring automatically. Note import part might take minutes, depending (mostly) number metacells. see takes long - set calc_gg_cor FALSE order skip calculating correlation genes. save significant amount import time make feature unavailable app. MCView supports also importing datasets old R metacell package, see import_dataset_metacell1 details.","code":"import_dataset(project = \"PBMC\",                 dataset = \"PBMC163k\",                 anndata_file = \"raw/metacells.h5ad\",                 cell_type_field =  \"cluster\",                cell_type_colors_file = \"raw/cluster-colors.csv\")"},{"path":"/articles/MCView.html","id":"run-the-app","dir":"Articles","previous_headings":"","what":"Run the app","title":"Getting started with MCView","text":"browser window opened app. can also specify port host, launch browser window, e.g.:","code":"run_app(project = \"PBMC\", launch.browser = TRUE) run_app(project = \"PBMC\", port = 5555, host = \"127.0.0.1\", launch.browser = FALSE)"},{"path":"/articles/MCView.html","id":"update-annotations","dir":"Articles","previous_headings":"","what":"Update annotations","title":"Getting started with MCView","text":"working bit initial metacell model, usually want update default dataset annotations ones created using MCView. can done : Pressing \"export\" button upper left \"Annotate\" screen saving file. Running: \"/path//metacell_types_file\" path exported file. can done cell type colors, different export button: can now rerun app types/colors updated. Note changed cell type names update cell_type_colors metacell_types, otherwise metacells old name appear \"(Missing)\" cell type tag.","code":"update_metacell_types(\"PBMC\", \"PBMC163k\", \"/path/to/metacell_types_file\") update_cell_type_colors(\"PBMC\", \"PBMC163k\", \"/path/to/cell_type_colors_file\")"},{"path":"/articles/MCView.html","id":"metadata","dir":"Articles","previous_headings":"","what":"Metadata","title":"Getting started with MCView","text":"can load numeric metadata fields metacell using metadata parameter import_dataset command: format data frame (delimited filename) column named metacell annotation fields. Note metadata numeric - categorical annotations please use metacell_types annotations. addition, can set breaks colors metadata field using metadata_colors parameter. want change metadata fields colors import, can use update_metadata update_metadata_colors functions: can generate metadata per metacell cell metadata using cell_metadata_to_metacell cell_metadata_to_metacell_from_h5ad functions.","code":"import_dataset(project = \"PBMC\",                 dataset = \"PBMC163k\",                 anndata_file = \"raw/metacells.h5ad\",                 cell_type_field =  \"cluster\",                cell_type_colors_file = \"raw/cluster-colors.csv\",                metadata = \"raw/metadata.csv\"                ) update_metadata(project = \"PBMC\",                 dataset = \"PBMC163k\",                 metadata = \"new_metadata.csv\") update_metadata_colors(project = \"PBMC\",                 dataset = \"PBMC163k\",                 metadata_colors = new_metadata_colors)"},{"path":"/articles/MCView.html","id":"deploy","dir":"Articles","previous_headings":"","what":"Deploy","title":"Getting started with MCView","text":"Create deployment ready bundle running: can upload bundle shinyapps.io running: shiny-server hosting service uploading \"PBMC_bundle\" directory service. Note might need set hosting service allow higher memory default - MCView keeps metacell matrix -memory therefore needs around 1GB RAM small datasets PBMC, 2-4GB large datasets MOCA.","code":"create_bundle(project = \"PBMC\", path = getwd(), name = \"PBMC_bundle\") rsconnect::deployApp(appDir = file.path(getwd(), \"PBMC_bundle\"))"},{"path":"/articles/MCView.html","id":"docker","dir":"Articles","previous_headings":"","what":"Docker","title":"Getting started with MCView","text":"See docker vignette instructions using docker image.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviezer Lifshitz. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lifshitz (2021). MCView: Shiny App Metacell Analysis. https://tanaylab.github.io/MCView, https://github.com/tanaylab/MCView.","code":"@Manual{,   title = {MCView: A Shiny App for Metacell Analysis},   author = {Aviezer Lifshitz},   year = {2021},   note = {https://tanaylab.github.io/MCView, https://github.com/tanaylab/MCView}, }"},{"path":"/index.html","id":"mcview","dir":"","previous_headings":"","what":"A Shiny App for Metacell Analysis","title":"A Shiny App for Metacell Analysis","text":"MCView creates shiny-app facilitating interactive exploration annotation metacell models. Metacell described . can also explore examples MCV output PBMC Mouse organogenesis Tanay group server.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Shiny App for Metacell Analysis","text":"Install latest github release: install development version:","code":"remotes::install_github(\"tanaylab/MCView\", ref = remotes::github_release()) remotes::install_github(\"tanaylab/MCView\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Shiny App for Metacell Analysis","text":"See vignette. Tl;dr:","code":""},{"path":"/index.html","id":"initialize-a-new-project","dir":"","previous_headings":"Usage","what":"Initialize a new project:","title":"A Shiny App for Metacell Analysis","text":"","code":"MCView::create_project(\"PBMC\")"},{"path":"/index.html","id":"import-a-dataset","dir":"","previous_headings":"Usage","what":"Import a dataset:","title":"A Shiny App for Metacell Analysis","text":"","code":"MCView::import_dataset(project = \"PBMC\",                 dataset = \"PBMC163k\",                 anndata_file = \"raw/metacells.h5ad\")"},{"path":"/index.html","id":"run-the-app","dir":"","previous_headings":"Usage","what":"Run the app:","title":"A Shiny App for Metacell Analysis","text":"can run app R using: shell:","code":"MCView::run_app(\"PBMC\", launch.browser = TRUE) Rscript start_app.R PBMC"},{"path":"/reference/MCView-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MCView: A Shiny App for Metacell Analysis — MCView-package","title":"MCView: A Shiny App for Metacell Analysis — MCView-package","text":"MCView creates shiny-app facilitating interactive exploration annotation metacell models. Metacell described [](https://github.com/tanaylab/metacells/blob/master/vignettes/Metacells_Vignette.ipynb). can also explore examples MCV output [PBMC](https://tanaylab.weizmann.ac.il/MCV/PBMC) [Mouse organogenesis](https://tanaylab.weizmann.ac.il/MCV/MOCA) Tanay group server.","code":""},{"path":[]},{"path":"/reference/MCView-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MCView: A Shiny App for Metacell Analysis — MCView-package","text":"Maintainer: Aviezer Lifshitz aviezer.lifshitz@weizmann.ac.il","code":""},{"path":"/reference/cell_metadata_to_metacell.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"Summarise cell metadata metacell. Metadata fields can either numeric summary function func applied values field, categorical metadata fields expanded multiple metadata columns fraction cells (metacell) every category. Variables either character, factor explicitly set categorical treated categorical. cell_metadata_to_metacell converts cell metadata metacell metadata data frames. cell_metadata_to_metacell_from_h5ad extracts metadata fields cell_to_metacell cells h5ad file runs cell_metadata_to_metacell.","code":""},{"path":"/reference/cell_metadata_to_metacell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"","code":"cell_metadata_to_metacell(   cell_metadata,   cell_to_metacell,   func = mean,   categorical = c() )  cell_metadata_to_metacell_from_h5ad(   anndata_file,   metadata_fields,   func = mean,   categorical = c(),   rm_outliers = TRUE )"},{"path":"/reference/cell_metadata_to_metacell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"cell_metadata data frame column named \"cell_id\" cell id metadata columns, name delimited file contains data frame. cell_to_metacell data frame column named \"cell_id\" cell id another column named \"metacell\" metacell cell part , name delimited file contains data frame. func summary function cell metadata non categorical metadata columns (e.g. mean, median, sum) categorical vector names categorical variables. returned data frame column category values fraction cells category metacell. anndata_file path h5ad file contains output metacell2 pipeline (metacells python package). metadata_fields names fields anndata object$obs contains metadata cell. rm_outliers calculate statistics cells marked outliers (outiler=TRUE object$obs) (relevant running cell_metadata_to_metacell_from_h5ad)","code":""},{"path":"/reference/cell_metadata_to_metacell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"data frame column named \"metacell\" metadata columns cell_metadata summarized metacell using func non-categorical variables, column category categorical metadata variables incell_metadata, values fraction cells category metacell.","code":""},{"path":"/reference/cell_metadata_to_metacell.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"cell_metadata_to_metacell_from_h5ad:","code":""},{"path":"/reference/cell_metadata_to_metacell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert cell metadata to metacell metadata — cell_metadata_to_metacell","text":"","code":"set.seed(60427) n_cells <- 5e6 cell_metadata <- tibble(     cell_id = 1:n_cells,     md1 = sample(1:5, size = n_cells, replace = TRUE),     md2 = rnorm(n = n_cells),     md_categorical1 = sample(paste0(\"batch\", 1:5), size = n_cells, replace = TRUE),     md_categorical2 = sample(1:5, size = n_cells, replace = TRUE) ) #> Error in tibble(cell_id = 1:n_cells, md1 = sample(1:5, size = n_cells,     replace = TRUE), md2 = rnorm(n = n_cells), md_categorical1 = sample(paste0(\"batch\",     1:5), size = n_cells, replace = TRUE), md_categorical2 = sample(1:5,     size = n_cells, replace = TRUE)): could not find function \"tibble\"  cell_to_metacell <- tibble(     cell_id = 1:n_cells,     metacell = sample(0:1535, size = n_cells, replace = TRUE) ) #> Error in tibble(cell_id = 1:n_cells, metacell = sample(0:1535, size = n_cells,     replace = TRUE)): could not find function \"tibble\" metadata <- cell_metadata_to_metacell(cell_metadata[, 1:3], cell_to_metacell) #> Error in cell_metadata_to_metacell(cell_metadata[, 1:3], cell_to_metacell): object 'cell_metadata' not found head(metadata) #> Error in head(metadata): object 'metadata' not found  metadata1 <- cell_metadata_to_metacell(cell_metadata[, 11:3], cell_to_metacell, func = function(x) x * 2) #> Error in cell_metadata_to_metacell(cell_metadata[, 11:3], cell_to_metacell,     func = function(x) x * 2): object 'cell_metadata' not found head(metadata1) #> Error in head(metadata1): object 'metadata1' not found   metadata3 <- cell_metadata_to_metacell(cell_metadata, cell_to_metacell, categorical = c(\"md_categorical1\", \"md_categorical2\")) #> Error in cell_metadata_to_metacell(cell_metadata, cell_to_metacell, categorical = c(\"md_categorical1\",     \"md_categorical2\")): object 'cell_metadata' not found head(metadata3) #> Error in head(metadata3): object 'metadata3' not found if (FALSE) { cell_metadata_to_metacell_from_h5ad(\"cells.h5ad\", c(\"pile\", \"age\", \"batch\"), categorical = \"batch\") }"},{"path":"/reference/create_bundle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a 'deployment ready' bundle of the a project app — create_bundle","title":"Generate a 'deployment ready' bundle of the a project app — create_bundle","text":"Generate 'deployment ready' bundle project app","code":""},{"path":"/reference/create_bundle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a 'deployment ready' bundle of the a project app — create_bundle","text":"","code":"create_bundle(   project,   path = getwd(),   name = \"MCView_bundle\",   overwrite = FALSE )"},{"path":"/reference/create_bundle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a 'deployment ready' bundle of the a project app — create_bundle","text":"project path project directory path path create bundle. name name folder create bundle. bundle created path/name overwrite overwrite bundle already exists","code":""},{"path":"/reference/create_bundle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a 'deployment ready' bundle of the a project app — create_bundle","text":"Create minimal shiny app path/name directory contain: app.R file. project config cache. bundle can deployed shiny-server, shinyapps.io environment supports serving shiny apps. Note: deploying services - make sure MCView package installed.","code":""},{"path":"/reference/create_bundle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a 'deployment ready' bundle of the a project app — create_bundle","text":"","code":"if (FALSE) { MCView::create_bundle(project = \"PBMC\", path = getwd(), name = \"PBMC\") }"},{"path":"/reference/create_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a configuration folder for a project — create_project","title":"Create a configuration folder for a project — create_project","text":"Create project directory default configuration files directory structure. text editor opened order edit project config.yaml file.","code":""},{"path":"/reference/create_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a configuration folder for a project — create_project","text":"","code":"create_project(project, edit_config = TRUE)"},{"path":"/reference/create_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a configuration folder for a project — create_project","text":"project path project edit_config open file editor config file editing","code":""},{"path":"/reference/create_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a configuration folder for a project — create_project","text":"","code":"if (FALSE) { dir.create(\"raw\") download.file(\"http://www.wisdom.weizmann.ac.il/~atanay/metac_data/PBMC_processed.tar.gz\", \"raw/#' PBMC_processed.tar.gz\") untar(\"raw/PBMC_processed.tar.gz\", exdir = \"raw\") create_project(\"PBMC\") }"},{"path":"/reference/dataset_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"List datasets in a project — dataset_ls","title":"List datasets in a project — dataset_ls","text":"List datasets project","code":""},{"path":"/reference/dataset_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List datasets in a project — dataset_ls","text":"","code":"dataset_ls(project)"},{"path":"/reference/dataset_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List datasets in a project — dataset_ls","text":"project path project directory","code":""},{"path":"/reference/dataset_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List datasets in a project — dataset_ls","text":"names existing datasets project","code":""},{"path":"/reference/dataset_ls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List datasets in a project — dataset_ls","text":"","code":"if (FALSE) { dataset_ls(\"PBMC\") }"},{"path":"/reference/dataset_rm.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a dataset from a project — dataset_rm","title":"Remove a dataset from a project — dataset_rm","text":"Remove dataset project","code":""},{"path":"/reference/dataset_rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a dataset from a project — dataset_rm","text":"","code":"dataset_rm(project, dataset)"},{"path":"/reference/dataset_rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a dataset from a project — dataset_rm","text":"project path project directory dataset name dataset remove","code":""},{"path":"/reference/dataset_rm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a dataset from a project — dataset_rm","text":"","code":"if (FALSE) { dataset_rm(\"PBMC\", \"PBMC163k\") }"},{"path":"/reference/import_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a dataset to an MCView project — import_dataset","title":"Import a dataset to an MCView project — import_dataset","text":"Read anndata file output python metacells package, import metacell dataset MCView. project can multiple datasets can app using right sidebar.","code":""},{"path":"/reference/import_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a dataset to an MCView project — import_dataset","text":"","code":"import_dataset(   project,   dataset,   anndata_file,   cell_type_field = \"cluster\",   metacell_types_file = NULL,   cell_type_colors_file = NULL,   metadata_fields = NULL,   metadata = NULL,   metadata_colors = NULL,   calc_gg_cor = TRUE )"},{"path":"/reference/import_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a dataset to an MCView project — import_dataset","text":"project path project dataset name dataset, e.g. \"PBMC\" anndata_file path h5ad file contains output metacell2 pipeline (metacells python package). cell_type_field name field anndata object$obs contains cell type (optional). field exist metacell_types_file missing, MCView cluster metacell matrix using kmeans++ algorithm (tglkmeans package). metacell_types parameter set field ignored. metacell_types_file path tabular file (csv,tsv) cell type assignement metacell. file column named \"metacell\" metacell ids another column named \"cell_type\" \"cluster\" cell type assignment. Metacell ids exists data ignored. parameter cell_type_field missing, MCView cluster metacell matrix using kmeans++ algorithm (tglkmeans package). cell_type_colors_file path tabular file (csv,tsv) color assignement cell type. file column named \"cell_type\" \"cluster\" cell types another column named \"color\" color assignment. Cell types exist metacell types ignored. missing, MCView use chameleon package assign color cell type. metadata_fields names fields anndata object$obs contains metadata metacell. fields *always* numeric - cell categorical annotations use cell_metadata_to_metacell categorical=TRUE convert numeric score (e.g. using fraction category). can use '' order import numeric fields  anndata object. metadata can either data frame column named \"metacell\" metacell id metadata columns name delimited file contains data frame. metadata_colors named list colors metadata column, name yaml file list. Colors given list first element vector colors second element vector breaks. colors given breaks implicitly determined minimum maximum metadata field. calc_gg_cor calculate top 30 correlated anti-correlated genes gene. computation can heavy large datasets weaker machines, can set calc_gg_cor=FALSE skip . Note feature missing app.","code":""},{"path":"/reference/import_dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import a dataset to an MCView project — import_dataset","text":"function create directory project/cache/dataset contain objects used MCView shiny app (metacell matrix). addition, can supply file type assignment metacell (metacell_types_file) file color assignment metacell type (cell_type_colors_file).","code":""},{"path":"/reference/import_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a dataset to an MCView project — import_dataset","text":"","code":"if (FALSE) { dir.create(\"raw\") download.file(     \"http://www.wisdom.weizmann.ac.il/~atanay/metac_data/PBMC_processed.tar.gz\",     \"raw/PBMC_processed.tar.gz\" ) untar(\"raw/PBMC_processed.tar.gz\", exdir = \"raw\") create_project(\"PBMC\") import_dataset(\"PBMC\", \"PBMC163k\", \"raw/metacells.h5ad\") }"},{"path":"/reference/import_dataset_metacell1.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","title":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","text":"Read objects metacell R package import metacell dataset MCView.","code":""},{"path":"/reference/import_dataset_metacell1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","text":"","code":"import_dataset_metacell1(   project,   dataset,   scdb,   matrix,   mc,   mc2d,   metacell_types_file,   cell_type_colors_file,   network = NULL,   time_annotation_file = NULL,   time_bin_field = NULL )"},{"path":"/reference/import_dataset_metacell1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","text":"project path project dataset name dataset, e.g. \"PBMC\" scdb path R metacell single cell RNA database matrix name umi matrix use mc name metacell object use mc2d name 2d projection object use metacell_types_file path tabular file (csv,tsv) cell type assignement metacell. file column named \"metacell\" metacell ids another column named \"cell_type\" \"cluster\" cell type assignment. Metacell ids exists data ignored. addition, file can column named \"age\" \"mc_age\" age metadata per metacell cell_type_colors_file path tabular file (csv,tsv) color assignement cell type. file column named \"cell_type\" \"cluster\" cell types another column named \"color\" color assignment. Cell types exist metacell types ignored. network name network object use (optional) time_annotation_file file names time bins (optional, relevant networks/flows). field named \"time_bin\" time bin id another field named \"time_desc\" contains description time bin time_bin_field name field cell_metadata contains time bin per cell (optional)","code":""},{"path":"/reference/import_dataset_metacell1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","text":"result directory project/cache/dataset contain objects used MCView shiny app (metacell matrix). addition, can supply file type assignment metacell (metacell_types_file) file color assignment metacell type (cell_type_colors_file). Make sure R metacell package installed order use function. network, time_annotation_file time_bin_field relevant computed flows/networks dataset therefore optional. order add time annotation dataset : 1. Add column named \"mc_age\" \"age\" metacell_types_file time per metacell 2. Create time_annotation_file id time bin description","code":""},{"path":"/reference/import_dataset_metacell1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a dataset to an MCView project from metacell R package — import_dataset_metacell1","text":"","code":"if (FALSE) { import_dataset_metacell1(     \"embflow\",     \"153embs\",     scdb = \"raw/scrna_db\",     matrix = \"embs\",     mc = \"embs\",     mc2d = \"embs\",     metacell_types_file = \"raw/metacell-types.csv\",     cell_type_colors_file = \"raw/cell-type-colors.csv\",     network = \"embs\",     time_annotation_file = \"raw/time-annot.tsv\",     time_bin_field = \"age_group\" ) }"},{"path":"/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the MCView Application — run_app","title":"Run the MCView Application — run_app","text":"Load project cache run MCView application.","code":""},{"path":"/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the MCView Application — run_app","text":"","code":"run_app(project, port = NULL, host = NULL, launch.browser = FALSE, ...)"},{"path":"/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the MCView Application — run_app","text":"project path project run. port app port host app host launch.browser launch web browser app start ... Arguments passed shiny::shinyApp ui UI definition app (example, call fluidPage() nested controls). bookmarking enabled (see enableBookmarking), must single argument function returns UI definition. server function three parameters: input, output, session. function called session ensuring app independent. onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app.","code":""},{"path":"/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the MCView Application — run_app","text":"","code":"if (FALSE) { MCView::run_app(\"PBMC\") MCView::run_app(project = \"PBMC\", port = 5555, host = \"127.0.0.1\") }"},{"path":"/reference/update_cell_type_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Update color assignment for each cell type — update_cell_type_colors","title":"Update color assignment for each cell type — update_cell_type_colors","text":"Change color assignments cell type ones listed cell_type_colors_file.","code":""},{"path":"/reference/update_cell_type_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update color assignment for each cell type — update_cell_type_colors","text":"","code":"update_cell_type_colors(project, dataset, cell_type_colors_file)"},{"path":"/reference/update_cell_type_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update color assignment for each cell type — update_cell_type_colors","text":"project path project directory dataset name dataset, e.g. \"PBMC\" cell_type_colors_file path tabular file (csv,tsv) color assignement cell type. file column named \"cell_type\" \"cluster\" cell types another column named \"color\" color assignment. Cell types exist metacell types ignored, changed names cell types also update metacell types (using update_metacell_types). function also accepts output 'export' button application annotation page. parameter missing, MCView use chameleon package assign color cell type.","code":""},{"path":"/reference/update_cell_type_colors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update color assignment for each cell type — update_cell_type_colors","text":"usually done first iteration annotation using \"Annotate\" tab MCView annotation, can export valid cell_type_colors_file. file column named \"cell_type\" \"cluster\" cell types another column named \"color\" color assignment. Note exported file __MCView__ app contains additional fields ignored function. hood - MCView updates file named \"cell_type_colors.tsv\" project/cache/dataset, can also edited manually.","code":""},{"path":"/reference/update_cell_type_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update color assignment for each cell type — update_cell_type_colors","text":"","code":"if (FALSE) { update_metacell_types(\"PBMC\", \"PBMC163k\", \"raw/cluster-colors.csv\") }"},{"path":"/reference/update_metacell_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Update cell type assignment for each metacell — update_metacell_types","title":"Update cell type assignment for each metacell — update_metacell_types","text":"Change cell type assignments metacell ones listed metacell_types_file.","code":""},{"path":"/reference/update_metacell_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update cell type assignment for each metacell — update_metacell_types","text":"","code":"update_metacell_types(project, dataset, metacell_types_file)"},{"path":"/reference/update_metacell_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update cell type assignment for each metacell — update_metacell_types","text":"project path project directory dataset name dataset, e.g. \"PBMC\" metacell_types_file path tabular file (csv,tsv) cell type assignement metacell. file column named \"metacell\" metacell ids another column named \"cell_type\" \"cluster\" cell type assignment. Metacell ids exists data ignored.","code":""},{"path":"/reference/update_metacell_types.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update cell type assignment for each metacell — update_metacell_types","text":"usually done first iteration annotation using \"Annotate\" tab MCView annotation, can export valid metacell_types_file. file column named \"metacell\" metacell ids another column named \"cell_type\" \"cluster\" cell type assignment. Note exported file __MCView__ app contains additional fields ignored function. hood - MCView updates file named \"metacell_types.tsv\" project/cache/dataset, can also edited manually.","code":""},{"path":"/reference/update_metacell_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update cell type assignment for each metacell — update_metacell_types","text":"","code":"if (FALSE) { update_metacell_types(\"PBMC\", \"PBMC163k\", \"raw/metacell-clusters.csv\") }"},{"path":"/reference/update_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Update metadata for a dataset — update_metadata","title":"Update metadata for a dataset — update_metadata","text":"Update metadata dataset","code":""},{"path":"/reference/update_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update metadata for a dataset — update_metadata","text":"","code":"update_metadata(   project,   dataset,   metadata = NULL,   metadata_fields = NULL,   anndata_file = NULL,   overwrite = FALSE )"},{"path":"/reference/update_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update metadata for a dataset — update_metadata","text":"project path project dataset name dataset, e.g. \"PBMC\" metadata can either data frame column named \"metacell\" metacell id metadata columns name delimited file contains data frame. metadata_fields names fields anndata object$obs contains metadata metacell. fields *always* numeric - cell categorical annotations use cell_metadata_to_metacell categorical=TRUE convert numeric score (e.g. using fraction category). can use '' order import numeric fields  anndata object. anndata_file path h5ad file contains output metacell2 pipeline (metacells python package). overwrite overwrite existing metadata. FALSE - override existing metadata fields.","code":""},{"path":"/reference/update_metadata_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Update metadata colors for a dataset — update_metadata_colors","title":"Update metadata colors for a dataset — update_metadata_colors","text":"Update metadata colors dataset","code":""},{"path":"/reference/update_metadata_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update metadata colors for a dataset — update_metadata_colors","text":"","code":"update_metadata_colors(project, dataset, metadata_colors, overwrite = FALSE)"},{"path":"/reference/update_metadata_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update metadata colors for a dataset — update_metadata_colors","text":"project path project dataset name dataset, e.g. \"PBMC\" metadata_colors named list colors metadata column, name yaml file list. Colors given list first element vector colors second element vector breaks. colors given breaks implicitly determined minimum maximum metadata field. overwrite overwrite existing colors. FALSE - override colors existing metadata fields.","code":""},{"path":"/news/index.html","id":"mcview-0-2-1-9000","dir":"Changelog","previous_headings":"","what":"MCView 0.2.1.9000","title":"MCView 0.2.1.9000","text":"Added Metadata tab. Added Markers tab. Added inner-fold matrix markers tab. Added option compare cell types Metacell tab. Added download button. Added busy spinner. create_project now takes path (instead path + project name) implicitly create project importing import cell type annotation using single file contains metacell types cell type colors. Bug fixes: issues #48, #51, #52, #60, #62 . Changed gene selectors manifold tab demand (reduce initialization time). Added () caching.","code":""},{"path":"/news/index.html","id":"mcview-0-2-1","dir":"Changelog","previous_headings":"","what":"MCView 0.2.1","title":"MCView 0.2.1","text":"bug fixes. See issues #36, #37, #38, #40, #41 #42.","code":""},{"path":"/news/index.html","id":"mcview-0-2-0","dir":"Changelog","previous_headings":"","what":"MCView 0.2.0","title":"MCView 0.2.0","text":"First stable version.","code":""}]
